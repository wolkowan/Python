# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, 
# стоящих на нечётной позиции.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
def Sum_in_odd_position():
    s= input("Задайте список из нескольких чисел через пробел:   ").split()
    print(s)
    sum=0
    for i in range(1, len(s), 2):
        sum+=int(s[i])
    print(f'Cуммa элементов списка, стоящих на нечётной позиции: {sum}')
#Sum_in_odd_position()

# 2. Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, 
# второй и предпоследний и т.д.
# Пример:
# [2, 3, 4, 5, 6] => [12, 15, 16];
# [2, 3, 5, 6] => [12, 15]
def Multiply_pair():
    s= input("Задайте список из нескольких чисел через пробел:   ").split()
    print(s)
    itog=[]
    for i in range((len(s)+1)//2):
        itog.append(int(s[i])*int(s[-(i+1)]))
    print(itog)
#Multiply_pair()


# 3. Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между 
# максимальным и минимальным значением дробной части элементов.
# Пример:
# [1.1, 1.2, 3.1, 5, 10.01] => 0.19

def Differrens_min_max():
    s= input("Задайте список из нескольких вещественных чисел через пробел:   ").split()
    print(s)

    #для теста
    # s=[1.1, 1.2, 3.1, 5, 10.01]


    min= float((s[0]))%1

    max= float((s[0]))%1


    for i in s:
        
        i=(float(i))%1
        if i==0:
            continue

        if i>max:
            max=i
        elif i<min:
            min=i
    
    print(f'Mинимальное значение дробной части элементов {round(min, 4)}')
    print(f'Mаксимальное значение дробной части элементов {round(max, 4)}')
    print(f'Разницa между максимальным и минимальным значением дробной части элементов {round((max-min),4)}')

Differrens_min_max()

# 4. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
#  Пример:
# 45 -> 101101
# 3 -> 11
# 2 -> 10

def Binary_number():
    x=int(input("Введите число в десятичном формате: "))
    s=[]
    while x>0:
        s.append(x%2)
        x=x//2
    print("Число, преобразованное в двоичный формат: ", end='')
    for i in s[::-1]:
        print(i, end='')
# Binary_number()



# 5. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Негафибоначчи
# Пример:
# для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]

def Fib():
    N=int(input("Задайте число для построения последовательности: "))
    s=[0,1]

    for i in range(2,N+1):
        s.append(s[i-1]+s[i-2])

    for i in range(N):
        s.insert(0,(s[1]-s[0]))

    print(s)
#Fib()



